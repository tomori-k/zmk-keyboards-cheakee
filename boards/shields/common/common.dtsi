#include <dt-bindings/zmk/behaviors.h>
#include <dt-bindings/zmk/matrix_transform.h>
#include <input/processors.dtsi>

#include "common-layouts.dtsi"

/ {
    kscan0: kscan0 {
        compatible = "zmk,kscan-gpio-charlieplex";
        gpios
            = <&xiao_d 1 GPIO_ACTIVE_HIGH>
            , <&xiao_d 2 GPIO_ACTIVE_HIGH>
            , <&xiao_d 3 GPIO_ACTIVE_HIGH>
            , <&xiao_d 4 GPIO_ACTIVE_HIGH>
            , <&xiao_d 5 GPIO_ACTIVE_HIGH>;
        interrupt-gpios = <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
        wakeup-source;
    };

    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        columns = <5>;
        rows = <10>;
        map = <
            RC(0,1) RC(1,0) RC(2,0) RC(3,0) RC(4,0)    RC(5,1) RC(6,0) RC(7,0) RC(8,0) RC(9,0)
            RC(0,2) RC(1,2) RC(2,1) RC(3,1) RC(4,1)    RC(5,2) RC(6,2) RC(7,1) RC(8,1) RC(9,1)
            RC(0,3) RC(1,3) RC(2,3) RC(3,2) RC(4,2)    RC(5,3) RC(6,3) RC(7,3) RC(8,2) RC(9,2)
            RC(0,4) RC(1,4)                            RC(5,4) RC(6,4)
        >;
    };

    chosen {
        zmk,physical-layout = &physical_layout0;
    };

    behaviors {
#if ZMK_BEHAVIOR_OMIT(SOFT_OFF_LOCAL)
        /omit-if-no-ref/
#endif
        // The name of the node must be at most 8 characters long
        // because the locality of this behavior is LOCALITY_EVENT_SOURCE (See docs)
        softoff_local: z_sol {
            compatible = "zmk,behavior-soft-off-local";
            #binding-cells = <0>;
        };
    };

    split_inputs {
        #address-cells = <1>;
        #size-cells = <0>;

        trackball_split: trackball_split@0 {
            compatible = "zmk,input-split";
            status = "disabled";
            reg = <0>;
        };
    };

    trackball_listener_central: trackball_listener_central {
        compatible = "zmk,input-listener";
        status = "disabled";
        device = <&trackball>;
    };

    trackball_listener: trackball_listener {
        compatible = "zmk,input-listener";
        status = "disabled";
        device = <&trackball_split>;
    };

    softoff_scan: softoff_scan {
        compatible = "zmk,kscan-gpio-direct";
        input-gpios = <&gpio0 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        wakeup-source;
    };

    wakeup_scan: wakeup_scan {
        compatible = "zmk,kscan-gpio-direct";
        input-gpios = <&xiao_d 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        wakeup-source;
    };

    side_band_behavior_triggers: side_band_behavior_triggers {
        compatible = "zmk,kscan-sideband-behaviors";

        kscan = <&softoff_scan>;
        auto-enable;
        wakeup-source;

        soft_off {
            column = <0>;
            row = <0>;
            bindings = <&softoff_local>;
        };
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };
};

&physical_layout0 {
    kscan = <&kscan0>;
    transform = <&default_transform>;
};

&uicr {
    nfct-pins-as-gpios;
};

&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                <NRF_PSEL(SPIM_MOSI, 1, 14)>,
                <NRF_PSEL(SPIM_MISO, 1, 14)>;
        };
    };

    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                <NRF_PSEL(SPIM_MOSI, 1, 14)>,
                <NRF_PSEL(SPIM_MISO, 1, 14)>;
            low-power-enable;
        };
    };
};

&spi0 {
    status = "disabled";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&xiao_d 10 GPIO_ACTIVE_LOW>;

    // https://github.com/zmkfirmware/zephyr/blob/v3.5.0%2Bzmk-fixes/include/zephyr/dt-bindings/input/input-event-codes.h#L245
    trackball: trackball@0 {
        status = "disabled";
        compatible = "pixart,pmw3610";
        reg = <0>;
        spi-max-frequency = <2000000>;
        motion-gpios = <&xiao_d 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        res-cpi = <600>;
        zephyr,axis-x = <INPUT_REL_X>;
        zephyr,axis-y = <INPUT_REL_Y>;
        smart-mode;
        invert-x;
    };
};
