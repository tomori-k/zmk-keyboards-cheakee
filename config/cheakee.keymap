#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Layer1 {
            bindings = <&mo 1>;
            key-positions = <30 31>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        gra {
            bindings = <&kp G>;
            key-positions = <21 22>;
        };

        n1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <14 0>;
        };

        n2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <14 1>;
        };

        n3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <14 2>;
        };

        n4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <14 3>;
        };
    };

    behaviors {
        hmr_l: hmr_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 15 25 32 33 26 28 27 29 19 18 17 16 6 7 8 9>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        hmr_r: hmr_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <31 30 20 21 22 23 24 14 13 12 11 10 0 1 2 3 4>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        lt_thumb: lt_thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_THUMB";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
        };

        lt_arrow: lt_arrow {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_ARROW";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <150>;
        };

        lt_scroll: lt_scroll {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_SCROLL";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;

            hold-while-undecided;
            require-prior-idle-ms = <150>;
        };

        hmr_l_2: hmr_l_2 {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_L_2";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 15 25 32 33 26 28 27 29 19 18 17 16 6 7 8 9>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            hold-while-undecided;
        };

        hmr_r_2: hmr_r_2 {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_R_2";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <31 30 20 21 22 23 24 14 13 12 11 10 0 1 2 3 4>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            hold-while-undecided;
        };

        hmr_num_l: hmr_num_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_NUM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 15 25 32 33 26 28 27 29 19 18 17 16 6 7 8 9>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            retro-tap;
        };

        hmr_num_r: hmr_num_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_NUM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <31 30 20 21 22 23 24 14 13 12 11 10 0 1 2 3 4>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            retro-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB  &kp Q  &kp W  &kp E  &kp R  &bootloader  &kp U  &kp I  &kp O  &kp P  &kp LEFT_CONTROL  &kp A  &kp S  &kp D  &kp F  &hmr_r_2 RCTRL H  &hmr_r_2 RIGHT_SHIFT J  &hmr_r RIGHT_ALT K  &hmr_r RIGHT_GUI L  &lt_arrow 3 MINUS  &kp LEFT_SHIFT  &kp Z  &kp X  &kp C  &kp V  &kp N  &lt_scroll 3 M  &kp COMMA  &kp DOT  &kp SLASH  &kp BACKSPACE  &kp SPACE  &lt_thumb 2 ENTER  &none
            >;
        };

        layer1 {
            bindings = <
&none  &none  &none  &none  &bootloader  &kp EQUAL  &kp LS(LEFT_BRACKET)  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp LEFT_BRACKET  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp RS(NUMBER_6)  &kp RS(NUMBER_7)  &kp RS(NUMBER_8)  &kp RS(NUMBER_9)  &kp RS(INT1)  &kp SLASH  &kp LS(SINGLE_QUOTE)  &kp MINUS  &kp LS(SEMICOLON)  &none  &kp RS(INT3)  &kp LS(EQUAL)  &kp RS(RIGHT_BRACKET)  &kp RS(BACKSLASH)  &kp INT3  &trans  &trans  &trans  &trans
            >;
        };

        layer2 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp NUMBER_1  &hmr_num_l LEFT_GUI NUMBER_2  &hmr_num_l LEFT_ALT NUMBER_3  &hmr_num_l LEFT_SHIFT NUMBER_4  &hmr_num_l LCTRL NUMBER_5  &hmr_num_r RCTRL NUMBER_6  &hmr_num_r RIGHT_SHIFT NUMBER_7  &hmr_num_r RIGHT_ALT NUMBER_8  &hmr_num_r RIGHT_GUI NUMBER_9  &kp NUMBER_0  &kp SLASH  &kp LS(SINGLE_QUOTE)  &kp MINUS  &kp LS(SEMICOLON)  &none  &kp F11  &kp F12  &kp COMMA  &kp DOT  &none  &trans  &trans  &trans  &trans
            >;
        };

        layer3 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &kp UP  &none  &none  &mo 4  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL  &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none  &none  &none  &none  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &kp DELETE  &trans  &trans
            >;
        };

        layer4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_CLR_ALL  &bt BT_CLR  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &bootloader  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};

&trackball_listener {
    scroller {
        layers = <3>;
        input-processors = <&zip_xy_to_scroll_mapper &zip_scroll_scaler 1 16>;
    };
};
